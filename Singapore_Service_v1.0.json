[{"id":"c8f9e14f.373c5","type":"inject","z":"ce0492a2.1b0e3","name":"Timed-Injection","topic":"get data from API","payload":"","payloadType":"date","repeat":"60","crontab":"","once":false,"x":133.00000762939453,"y":1001.0001211166382,"wires":[["708adf89.6631a"]]},{"id":"f337eaec.1342d8","type":"http request","z":"ce0492a2.1b0e3","name":"data request","method":"GET","ret":"txt","url":"https://api.data.gov.sg/v1/transport/taxi-availability?date_time={{time}}","tls":"","x":374,"y":1005.5000524520874,"wires":[["3f31bfb2.ab523"]]},{"id":"708adf89.6631a","type":"function","z":"ce0492a2.1b0e3","name":"set key & time","func":"Date.prototype.today = function () { \n    return (this.getFullYear() +\"-\"+(((this.getMonth()+1) < 10)?\"0\":\"\") + (this.getMonth()+1) +\"-\"+(((this.getDay()+1) < 10)?\"0\":\"\") + (this.getDay()+1));\n}\nDate.prototype.timeNow = function () {\n     return ((this.getHours() < 10)?\"0\":\"\") + this.getHours() +\":\"+ ((this.getMinutes() < 10)?\"0\":\"\") + this.getMinutes() +\":\"+ ((this.getSeconds() < 10)?\"0\":\"\") + this.getSeconds();\n}\nd = new Date();\nmsg.time  = d.today() +\"T\"+ d.timeNow() ;\nmsg.headers = {};\nmsg.headers['api-key'] = 'g0RtqAAZBBeufV1w10GyIJFQEIoKAQcs';\nreturn msg;","outputs":1,"noerr":0,"x":261.99999237060547,"y":939.5001058578491,"wires":[["f337eaec.1342d8"]]},{"id":"55f4dc50.74d334","type":"comment","z":"ce0492a2.1b0e3","name":"1.Horizontal Lambda (Ingestion)","info":"get geoJSON from singapore API and store it","x":226,"y":897.0000691413879,"wires":[]},{"id":"4aa668ea.21d6b8","type":"file","z":"ce0492a2.1b0e3","name":"file storage: GEO","filename":"/home/stelios/GEO.json","appendNewline":true,"createDir":false,"overwriteFile":"false","x":964.0000801086426,"y":1005.5002346038818,"wires":[]},{"id":"5fd340ce.22a27","type":"function","z":"ce0492a2.1b0e3","name":"Filter JSON","func":"msg.payload = msg.payload.features[0].geometry.coordinates\nreturn msg;","outputs":1,"noerr":0,"x":582.9999923706055,"y":1010.0001010894775,"wires":[["7a996090.1102e","590b2ac8.85fbe4"]]},{"id":"3f31bfb2.ab523","type":"json","z":"ce0492a2.1b0e3","name":"geoJSON","x":490.0000114440918,"y":945.000078201294,"wires":[["5fd340ce.22a27"]]},{"id":"cacbf.14d44342","type":"comment","z":"ce0492a2.1b0e3","name":"2.Vertical Lambda (Analysis/Batch Processing)","info":"","x":1398.0001068115234,"y":46,"wires":[]},{"id":"7a996090.1102e","type":"json","z":"ce0492a2.1b0e3","name":"coordinates","x":765.0000991821289,"y":1008.0002517700195,"wires":[["4aa668ea.21d6b8"]]},{"id":"4607ec8e.67ac74","type":"comment","z":"ce0492a2.1b0e3","name":"3.Diagonal Lambda (Real-Time)","info":"","x":267.99998474121094,"y":564.6095533370972,"wires":[]},{"id":"30bd9f23.c2a1f","type":"inject","z":"ce0492a2.1b0e3","name":"Batch Start","topic":"Vertical Lambda/batch processing","payload":"","payloadType":"date","repeat":"1800","crontab":"","once":false,"x":1277.6289596557617,"y":834.4414987564087,"wires":[["46044a88.8b31a4"]]},{"id":"46044a88.8b31a4","type":"file in","z":"ce0492a2.1b0e3","name":"file storage :GEO","filename":"/home/stelios/GEO.json","format":"utf8","x":1348.6294021606445,"y":715.7151546478271,"wires":[["c10b2dba.a213c"]]},{"id":"2c6c03e1.5209dc","type":"debug","z":"ce0492a2.1b0e3","name":"","active":true,"console":"false","complete":"true","x":701.625072479248,"y":649.0470523834229,"wires":[]},{"id":"c10b2dba.a213c","type":"function","z":"ce0492a2.1b0e3","name":"prepare batch","func":"ret  = [];\nvar lines = msg.payload.split('\\n');\nfor(var i = 0;i<lines.length;i++){\n    li = lines[i];\n    if (li === \"\" || li ===\"\\n\") continue;\n    obj = JSON.parse(li);\n    for(var j=0;j<obj.length;j++){\n        ret.push(obj[j]);\n    }\n}\nmsg.payload = ret;\nreturn msg;","outputs":1,"noerr":0,"x":1478.6255722045898,"y":460.4024257659912,"wires":[["36cc2524.7c638a","2d1269de.e64246"]]},{"id":"2f9558c7.6f4938","type":"comment","z":"ce0492a2.1b0e3","name":"Batch processing TRIGGER!!!","info":"","x":1300.3907623291016,"y":871.101749420166,"wires":[]},{"id":"dab150ab.e0939","type":"file","z":"ce0492a2.1b0e3","name":"GEO","filename":"/home/stelios/GEO.json","appendNewline":true,"createDir":false,"overwriteFile":"true","x":1806.3836059570312,"y":736.9378108978271,"wires":[]},{"id":"36cc2524.7c638a","type":"function","z":"ce0492a2.1b0e3","name":"empty","func":"msg.payload = \"\";\nreturn msg;","outputs":1,"noerr":0,"x":1660.3908653259277,"y":738.4024925231934,"wires":[["dab150ab.e0939"]]},{"id":"2d1269de.e64246","type":"function","z":"ce0492a2.1b0e3","name":"Analyze Data","func":"//Random selection, for making size smaller!\ngetRandom = function(arr, n) {\n    var result = new Array(n),\n        len = arr.length,\n        taken = new Array(len);\n    if (n > len)\n        throw new RangeError(\"getRandom: more elements taken than available\");\n    while (n--) {\n        var x = Math.floor(Math.random() * len);\n        result[n] = arr[x in taken ? taken[x] : x];\n        taken[x] = --len;\n    }\n    return result;\n}\nvar clusterMaker = context.global.clusters;\n//For better clustering we would need another external tool.\nclusterMaker.k(100);//should be more but it is way too slow\nclusterMaker.iterations(500);//should be more but it is way too slow\n//MAKING THE PAYLOAD SMALLER...\nclust_data = getRandom(msg.payload,10000);\nconsole.log(clust_data.length);\nclusterMaker.data(clust_data);\nconsole.log(\"clustering...\");\nclust = clusterMaker.clusters();\nconsole.log(\"finished clustering\");\ncenters = [];\nfor (var i =0;i<clust.length;i++){\n    centers.push({latitude: clust[i].centroid[1], longitude: clust[i].centroid[0]});\n}\nglobal.set(\"foundCenters\",centers);\nmsg.payload = centers;\n//Centers are sets of coordinates. Moving towards them,increases the chances of finding more taxis.\nreturn msg;\n","outputs":1,"noerr":0,"x":1465.2850799560547,"y":240.83003520965576,"wires":[["9c7b4153.05d6e"]]},{"id":"35355781.7920e8","type":"inject","z":"ce0492a2.1b0e3","name":"empty GEO","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":1607.7223472595215,"y":826.243314743042,"wires":[["36cc2524.7c638a"]]},{"id":"7e2c162d.bc4e48","type":"comment","z":"ce0492a2.1b0e3","name":"Clean-up Trigger","info":"","x":1605.05570602417,"y":869.1008644104004,"wires":[]},{"id":"9c7b4153.05d6e","type":"debug","z":"ce0492a2.1b0e3","name":"","active":true,"console":"false","complete":"false","x":1462.718894958496,"y":93.28473854064941,"wires":[]},{"id":"a4b98276.3384a","type":"http in","z":"ce0492a2.1b0e3","name":"Service is Called","url":"/taxis","method":"get","swaggerDoc":"","x":147.94104766845703,"y":211.51396369934082,"wires":[["f26216f.2c46be8","f3d0b69b.d0f0e8"]]},{"id":"a413214.d43d6e","type":"http response","z":"ce0492a2.1b0e3","name":"Response sent","x":181.9445571899414,"y":47.25007438659668,"wires":[]},{"id":"f26216f.2c46be8","type":"debug","z":"ce0492a2.1b0e3","name":"Service call notification","active":true,"console":"false","complete":"true","x":237.9479522705078,"y":382.62501335144043,"wires":[]},{"id":"590b2ac8.85fbe4","type":"function","z":"ce0492a2.1b0e3","name":"Current Coordinates","func":"global.set(\"Coordinates\", msg.payload);\n//msg.payload = \"\";\n//msg.centers = global.get(\"foundCenters\");\nreturn msg;","outputs":1,"noerr":0,"x":674.6406402587891,"y":574.656623840332,"wires":[["2c6c03e1.5209dc"]]},{"id":"f3d0b69b.d0f0e8","type":"function","z":"ce0492a2.1b0e3","name":"fetch events/locations","func":"//Assess if request is right.\nif(msg.payload.lat === undefined && msg.payload.lon === undefined){\n    msg.payload = {message : \"Define lat and lon as url parameters! Coordinates are given in decimal degrees!\"};\n    return msg;\n}\nvar lat =  parseFloat(msg.payload.lat);\nvar lon = parseFloat(msg.payload.lon);\nif(isNaN(lat) || isNaN(lon)){\n    msg.payload = {message : \"Coordinates have to be numbers, DECIMAL DEGREES!\"};\n    return msg;\n}\nmsg.lat = msg.payload.lat;\nmsg.lon = msg.payload.lon;\nvar geolib = context.global.geolib;\nvar center_lat=1.358480;\nvar center_lon = 103.806982;\nvar vicinity = 35000;\n//Assess if lat and lon are in Singapore\nif(!geolib.isPointInCircle(\n    {latitude: lat, longitude: lon},\n    {latitude: center_lat, longitude: center_lon},\n    vicinity\n    )){\n    msg.payload = {message : \"Coordinates are NOT WITHIN SINGAPORE!\"};\n    return msg;\n}\nselectNear = function(arr,radius,lat,lon){\n    coords = []\n    for(i = 0;i<arr.length;i++){\n        if(geolib.isPointInCircle(\n            {latitude: arr[i][1], longitude: arr[i][0]},\n            {latitude: lat, longitude: lon},\n            radius\n        )){\n            coords.push(arr[i]) ;\n        }\n    }\n    return coords;\n}\ntaxicoords = selectNear(global.get(\"Coordinates\"),1000,lat,lon);\nnearest = geolib.findNearest({latitude: lat, longitude: lon}, global.get(\"foundCenters\"));\nnearest_center = global.get(\"foundCenters\")[parseInt(nearest.key)];\nbest_Direction = geolib.getCompassDirection({latitude: lat, longitude: lon}, nearest_center);\nmsg.payload = {message: \"OK\",bestDirection:best_Direction,taxis:taxicoords};\nreturn msg;","outputs":1,"noerr":0,"x":687.9445266723633,"y":530.1423721313477,"wires":[["a413214.d43d6e","971c3dee.c268c"]]},{"id":"971c3dee.c268c","type":"function","z":"ce0492a2.1b0e3","name":"prepare update","func":"if(msg.payload.message !== \"OK\"){\n    msg.payload=\"Error in response\";\n    return msg;\n}\nmsg.taxis = msg.payload.taxis;\n//properties setup\ndef_speed = 2;\nmy_bearing = msg.payload.bestDirection.bearing;\nmsg.payload= {name:\"myLocation\",\n    best_direction:msg.payload.bestDirection.exact, \n    lat: msg.lat , lon: msg.lon, bearing:my_bearing,\n    speed:def_speed,\n    iconColor: \"green\",\n    command : {lat: msg.lat , lon: msg.lon, zoom: 15 }};\nreturn msg;","outputs":1,"noerr":0,"x":991.0003509521484,"y":1235.3648433685303,"wires":[["eb9e3144.dfcf8","4a5a75a7.ce6d7c","6fc23e33.6ab52"]]},{"id":"eb9e3144.dfcf8","type":"function","z":"ce0492a2.1b0e3","name":"taxi locations","func":"taxis = msg.taxis;\nmsg.payload = [];\nfor(var i =0 ; i<taxis.length ; i++){\n    taxiname = \"taxi\" + i ;\n    msg.payload.push(\n        {name:taxiname,lon:taxis[i][0],\n        lat:taxis[i][1],icon:\"car\"});\n}\nreturn msg;","outputs":1,"noerr":0,"x":1113.608024597168,"y":1292.5902671813965,"wires":[["15ebc096.24814f"]]},{"id":"6fc23e33.6ab52","type":"debug","z":"ce0492a2.1b0e3","name":"My location","active":true,"console":"false","complete":"true","x":1175.6114883422852,"y":1200.6110830307007,"wires":[]},{"id":"4a5a75a7.ce6d7c","type":"worldmap","z":"ce0492a2.1b0e3","name":"Map output","lat":"1.358480","lon":"103.806982","zoom":"","layer":"","cluster":"15","maxage":"60","usermenu":"show","panit":"false","x":1360.6183395385742,"y":1228.3506660461426,"wires":[]},{"id":"15ebc096.24814f","type":"split","z":"ce0492a2.1b0e3","name":"","splt":"\\n","x":1260.1739120483398,"y":1291.562484741211,"wires":[["4a5a75a7.ce6d7c"]]},{"id":"343494dd.a5955c","type":"worldmap in","z":"ce0492a2.1b0e3","name":"Get worldmap event","x":105,"y":1236.1215744018555,"wires":[["9aaffea4.0d5bb"]]},{"id":"dc2df781.b32e68","type":"comment","z":"ce0492a2.1b0e3","name":"4.Example client","info":"","x":95,"y":1180.972246170044,"wires":[]},{"id":"4812f53d.ebf33c","type":"function","z":"ce0492a2.1b0e3","name":"prepare service call","func":"msg.lat = msg.payload.lat;\nmsg.lon = msg.payload.lon;\nmsg.name = msg.payload.point;\nreturn msg;","outputs":1,"noerr":0,"x":445.9479675292969,"y":1237.1391792297363,"wires":[["ed2a2550.bd78e8"]]},{"id":"9aaffea4.0d5bb","type":"switch","z":"ce0492a2.1b0e3","name":"Point","property":"payload.action","propertyType":"msg","rules":[{"t":"eq","v":"point","vt":"str"}],"checkall":"true","outputs":1,"x":276.9444770812988,"y":1236.6042671203613,"wires":[["4812f53d.ebf33c"]]},{"id":"ed2a2550.bd78e8","type":"http request","z":"ce0492a2.1b0e3","name":"Call Service","method":"GET","ret":"txt","url":"http://localhost:1880/taxis?lat={{lat}}&lon={{lon}}","tls":"","x":644.9444961547852,"y":1236.1909923553467,"wires":[["bb105129.23bc1"]]},{"id":"bb105129.23bc1","type":"json","z":"ce0492a2.1b0e3","name":"","x":793.9409790039062,"y":1235.3924083709717,"wires":[["971c3dee.c268c"]]}]
